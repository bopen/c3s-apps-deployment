# Name of application
name: ecde # Name of application
webapp:
  image: eccr.ecmwf.int/c3s-applications/ecde-webapp  # image for application
  tag: latest  # image tag to use (this )
  port: 80  # Port exposed by the application
  replicas: 1
  env:
    wms-server: http://ecde-dev.copernicus-climate.eu/ecde-wms
    api-base: http://ecde-dev.copernicus-climate.eu/ecde-wms
    indicator: 05_tropical_nights
api-service:
  image: eccr.ecmwf.int/c3s-applications/ecde-server  # image for application
  tag: latest  # image tag to use (this )
  port: 5000 # Port exposed by the application
  replicas: 1
  env:
    mode: production
    allowed-origin:
    wms-server: http://ecde-dev.copernicus-climate.eu/ecde-wms
    wms-data-dir: /skinnywms/appdata
    wms-style-dir: /skinnywms/styles
skinny-wms:
  image: ecmwf/skinnywms  # image for application
  tag: 0.10.0  # image tag to use (this )
  port: 5000  # Port exposed by the application
  replicas: 1
  env:
    skinnywms-uwsgi-workers: $(SKINNYWMS_UWSGI_WORKERS:-4)
    skinnywms-data-path: /skinnywms/appdata
    magics-style-path: /skinnywms/styles
shared-pvc:
  name: wms-data-volume
  storage: 10Gi
  storageclass: cinder-csi
  path: /skinnywms
# Values used for ingress control
ingress:
  # Hostname where the app will be published, this must be mapped to the cluster described by the KUBECONFIG
  hostname: ecds-dev.copernicus-climate.eu  
  # Path to the application, this must be included in the env when building a JS application
  path: /c3s-apps/ecde/
  # SSL certificate secret name:
  secretName: star.copernicus-climate.eu
  storageclass: nginx
  
